data(iris)
head(iris)
data(iris)
head(iris)
levelplot(table(BankWages$education,BankWages$job))
library(lattice)
levelplot(table(BankWages$education,BankWages$job))
data(BankWages)
library(AER)
library("lattice")
library("AER")
install.packages("lattice")
install.packages("lattice")
install.packages("AER")
sessionInfo()
sessionInfo()
library("AER")
data(BankWages)
levelplot(table(BankWages$education,BankWages$job))
library("lattice")
levelplot(table(BankWages$education,BankWages$job))
?mosaicplot
mosaicplot(Titanic, main = "Survival on the Titanic", color = TRUE)
mosaicplot(~ Sex + Age + Survived, data = Titanic, color = TRUE)
mosaicplot(~ Sex + Age + Survived,
data = Titanic, shade = TRUE)
install.packages("psych")
data(roller)
library("DAAG")
data(roller)
install.packages("DAAG")
data(roller)
library("DAAG")
data(roller)
?roller
plot(roller.lm)
roller.lm <- lm(depression ~ weight, data = roller)
plot(roller.lm)
roller.lm.plot <- plot(roller.lm)
plot::lm
roller.lm.plot
str(roller.lm.plot)
roller.lm.plot
plot(roller.lm,1)
plot(roller.lm,2)
data("plasma", package = "HSAUR")
install.packages("HSAUR")
library("HSAUR")
data("plasma", package = "HSAUR")
cdplot(ESR ~ fibrinogen, data = plasma)
plasma_glm_1 <- glm(ESR ~ fibrinogen, data = plasma,
family = binomial())
install.packages("faraway")
library("MASS")
library("MASS")
house.plr<-polr(Sat~Infl,weights=Freq,data=housing)
histogram(~ gcsescore, data = Chem97)
library("mlmRev")
install.packages("mlmRev")
install.packages("mlmRev")
library("mlmRev")
data(Chem97)
histogram(~ gcsescore, data = Chem97)
library("lattice")
library("lattice")
library("mlmRev")
data(Chem97)
histogram(~ gcsescore, data = Chem97)
load("D:/Temp/TemporÃ¤re Internetdateien/Content.Outlook/IM04V89T/human_development_indeces_by_province_2007.rdata")
densityplot(~ gcsescore | factor(score), Chem97,
groups=gender,plot.points=FALSE,auto.key=TRUE)
densityplot(~ gcsescore | factor(score), Chem97, groups = gender,
plot.points = FALSE, auto.key = TRUE)
?densityplot
densityplot( ~ height | voice.part, data = singer, layout = c(2, 4),
xlab = "Height (inches)", bw = 5)
?barchart
barchart(yield ~ variety | site, data = barley,
groups = year, layout = c(1,6), stack = TRUE,
auto.key = list(space = "right"),
ylab = "Barley Yield (bushels/acre)",
scales = list(x = list(rot = 45)))
?qqplot
y <- rt(200, df = 5)
qq(gender ~ gcsescore | factor(score), Chem97,
f.value = ppoints(100), type = c("p", "g"), aspect = 1)
?xyplot
xyplot(Sepal.Length + Sepal.Width ~ Petal.Length + Petal.Width | Species,
data = iris, scales = "free", layout = c(2, 2),
auto.key = list(x = .6, y = .7, corner = c(0, 0)))
?wireframe
par.set <-
list(axis.line = list(col = "transparent"),
clip = list(panel = "off"))
print(cloud(Sepal.Length ~ Petal.Length * Petal.Width,
data = iris, cex = .8,
groups = Species,
main = "Stereo",
screen = list(z = 20, x = -70, y = 3),
par.settings = par.set,
scales = list(col = "black")),
split = c(1,1,2,1), more = TRUE)
## Trivariate Plots
cloud(prop.table(Titanic, margin = 1:3),
type = c("p", "h"), strip = strip.custom(strip.names = TRUE),
scales = list(arrows = FALSE, distance = 2), panel.aspect = 0.7,
zlab = "Proportion")[, 1]
print(cloud(Sepal.Length ~ Petal.Length * Petal.Width,
data = iris, cex = .8,
groups = Species,
main = "Stereo",
screen = list(z = 20, x = -70, y = 0),
par.settings = par.set,
scales = list(col = "black")),
split = c(2,1,2,1))
?contourplot
contourplot(fit ~ wind * temperature | radiation, data = grid,
cuts = 10, region = TRUE,
xlab = "Wind Speed (mph)",
ylab = "Temperature (F)",
main = "Cube Root Ozone (cube root ppb)")
require(stats)
attach(environmental)
ozo.m <- loess((ozone^(1/3)) ~ wind * temperature * radiation,
parametric = c("radiation", "wind"), span = 1, degree = 2)
w.marginal <- seq(min(wind), max(wind), length.out = 50)
t.marginal <- seq(min(temperature), max(temperature), length.out = 50)
r.marginal <- seq(min(radiation), max(radiation), length.out = 4)
wtr.marginal <- list(wind = w.marginal, temperature = t.marginal,
radiation = r.marginal)
grid <- expand.grid(wtr.marginal)
grid[, "fit"] <- c(predict(ozo.m, grid))
contourplot(fit ~ wind * temperature | radiation, data = grid,
cuts = 10, region = TRUE,
xlab = "Wind Speed (mph)",
ylab = "Temperature (F)",
main = "Cube Root Ozone (cube root ppb)")
detach()
?splom
super.sym <- trellis.par.get("superpose.symbol")
splom(~iris[1:4], groups = Species, data = iris,
panel = panel.superpose,
key = list(title = "Three Varieties of Iris",
columns = 3,
points = list(pch = super.sym$pch[1:3],
col = super.sym$col[1:3]),
text = list(c("Setosa", "Versicolor", "Virginica"))))
?parallel
parallelplot(~iris[1:4] | Species, iris)
slide.path <- "C:/Users/kolbjp/Documents/GitHub/IntroR/2016/slides"
setwd(slide.path)
dir()
library(knitr)
setwd(slide.path)
purl("GrundlagenR.Rmd")
max(b)
min(b)
b <- c(1,2) # erzeugt ein Objekt mit den Zahlen 1 und 2
sd(b)
var(b)
mean(b)
median(b)
quantile(b,.9)
sample(b,1)
purl("GrundlagenR.Rmd")
install.packages("Rcmdr")
library("Rcmdr")
with(Dataset, table(actvgrs))
.Table <- with(Dataset, table(actvgrs))
cat("\ncounts:\n")
print(.Table)
cat("\npercentages:\n")
print(round(100*.Table/sum(.Table), 2))
```{r,eval=F}
library("Rcmdr")
slide.path <- "C:/Users/kolbjp/Documents/GitHub/IntroR/2016/slides"
setwd(slide.path)
purl("GrundlagenR.Rmd")
purl("Datentypen.Rmd")
setwd(slide.path)
rmarkdown::render('report.Rmd')
devtools::install_github("jbryer/Rgitbook")
require(Rgitbook)
installGitbook()
checkForGitbook()
require(Rgitbook)
paper.path <- "J:/Work/Statistik/Kolb/Workshops/2016/IntroR/paper"
setwd(paper.path)
newGitbook("testbook")
library("raster")
install.packages("raster")
library("raster")
DEU2 <- getData('GADM', country='DEU', level=2)
DEU3 <- getData('GADM', country='DEU', level=3)
plot(DEU3)
DEU4 <- getData('GADM', country='DEU', level=4)
plot(DEU4)
head(DEU4@data)
table(DEU4@data$ID_1)
SAL <- DEU4[DEU4@data$ID_1==12,]
plot(SAL)
setwd(slide.path)
purl("Hilfe.Rmd")
link <- "http://www.statistik.at/web_de/static/mz_2013 _sds_-_datensatz_080469. sav"
?read.spss
Dat <- read.spss(link,to.data.frame=T)
link<- "http://www.statistik.at/web_de/static/
mz_2013_sds_-_datensatz_080469.sav"
?read.spss
Dat <- read.spss(link,to.data.frame=T)
link <- "https://commondatastorage.googleapis.com/ckannet-storage/2012-07-09T214020/global_airports.csv"
airports <- read.csv(link)
head(airports)
url <- "https://files.datapress.com/london/dataset/resources-of-global-city-comparison-indicators/List%20of%20global%20city%20indicator%20sources-reports.xlsx"
library(xlsx)
install.packages("xlsx")
library("xlsx")
indi <- read.xlsx(url)
indi <- read.xlsx(url,1)
