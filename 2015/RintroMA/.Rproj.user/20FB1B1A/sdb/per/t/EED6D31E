{
    "contents" : "#------------------------------------------------------------#\n# Einführung in R\n# Jan-Philipp Kolb\n# \n# Erste Befehle\n#\n# 30.04.2014\n#------------------------------------------------------------#\n\n# IntroR_A_ErsteBefehle.R\n\n#------------------------------------------------------------#\n# R als Taschenrechner\n#------------------------------------------------------------#\n\n#Grundrechenarten\n\n1+1\n2-1\n2*2\n4/2\n\n#Mathematische Funktionen\n\nlog(4)\nlog(4,base=2)\nexp(4)\nsqrt(4)\n2^4\n\n#------------------------------------------------------------#\n# Modularer Aufbau - Bibliotheken\n#------------------------------------------------------------#\n\n  # so installiert man eine Bibliothek\ninstall.packages(\"lme4\")\n\n  # so lädt man eine Bibliothek\nlibrary(lme4)\n\n#------------------------------------------------------------#\n# Wie bekommt man Hilfe\n#------------------------------------------------------------#\n\nhelp.start()\n\n# Die Funktion help:\nhelp(lm)\nhelp(lapply)\n\nhelp(package = \"splines\")\n\n# Grundsätzlich mit dem Befehl ?\n\n# Beispiele bekommt man so:\n\nexample(lm)\n\n#------------------------------------------------------------#\n# Vektoren und Zuweisungen\n#------------------------------------------------------------#\n\n# <- ist der Zuweisungsoperator\nb <- c(1,2)\n\n  # den Mittelwert berechnen\nmean(b)\nlength(b)\n\nstr(b)\n\n  # Das Maximum:\nmax(b)\n\n  # Minimum\nmin(b)\n\n  # Standardabweichung\nsd(b)\n\n  # Varianz\nvar(b)\n\n  # Mittelwert\nmean(b)\n\n  # Median\nmedian(b)\n\n  # Das Ergebnis kann wieder einem Objekt zugewiesen werden\nmed_b <- median(b)\n\n#####\n# Funktionen mit mehr Argumenten\n\nd <- c(1,4,3,7,9,5,4,3)\n\n\n  # Quantil berechnen:\nquantile(d,0.9)\n\n\n  # hier werden 2 Elemente aus d gezogen\nsample(x=d,size=2,replace=FALSE)\n\n  # jedes Mal können andere Ergebnisse resultieren\n\n  # hier wird nur ein Element gezogen\nsample(x=d,size=1,replace=FALSE)\n\n  # auch dieses Ergebnis kann wieder in einem Element\n  # gespeichert werden\n\nstichA <- sample(x=d,size=1,replace=FALSE)\n\n  # Das Argument replace gibt an, ob eine Stichprobe mit\n  # oder ohne zurücklegen gezogen wird\n\n#------------------------------------------------------------#\n# Verschiedene Datentypen\n#------------------------------------------------------------#\n\nA <- c(5,4,3)\nis.numeric(A)\nstr(A)\n\nB <- c(T,F,T,T)\nis.logical(B)\nstr(B)\n\nC <- c(\"AB\",\"F\",\"23\")\nis.logical(C)\nstr(C)\n\n  # immer das niedrigste \n  # Niveau wird genommen\n\nD <- c(1,3,\"A\")\nstr(D)\n\nb <- c(1,2)\nlog <- c(T,F)\nchar <- c(\"A\",\"b\")\n\n  # Faktoren sind eine spezielle Form,\n  # vor allem bei Regression hilfreich\n\nfac <- as.factor(c(1,2))\n\n  # mit as... kann man also umwandeln\n\nas.character(b)\n  # wenn man das nicht in Objekt speichert\n  # merkt es es sich R auch nicht\n\nb\n\n\nb <- c(1,2) # numeric\nlog <- c(T,F) # logical\nchar <-c(\"A\",\"b\") # character\nfac <- as.factor(c(1,2)) # factor\n\n#------------------------------------------------------------#\n# Indizieren\n#------------------------------------------------------------#\n\n####\n# vector\n\nA1 <- c(1,2,3,4)\nA1\nA1[1]\nA1[4]\nA1[1:3]\nA1[-4]\n\n####\n# dataframe\n\n  # Beispieldaten generieren:\nAGE <- c(20,35,48,12)\nSEX <- c(\"m\",\"w\",\"w\",\"m\")\n\n  # Diese beiden Vektoren zu einem data.frame verbinden:\nDaten <- data.frame(Alter=AGE,Geschlecht=SEX)\n\n  # Anzahl der Zeilen/Spalten herausfinden\n\nnrow(Daten) # Zeilen\nncol(Daten) # Spalten\n\nAA <- 4:1\nA2 <- cbind(A1,AA)\nA2[1,1]\nA2[2,]\nA2[,1]\nA2[,1:2]\n\n####\n# Matrizen und Arrays\n\nA <- matrix(seq(1,100), nrow = 4)\ndim(A)\n\nA3 <- array(1:8,c(2,2,2))\nA3\nA3[,,2]\n\n####\n# Liste\n\nA4 <- list(A1,1)\nA4\nA4[[2]]\n\n#------------------------------------------------------------#\n# Logische Operatoren\n#------------------------------------------------------------#\n\n  # Ist 1 größer als 2?\n1>2\n1<2\n\n1==2\n\n  # Diese Operatoren eignen sich gut \n  # um Datensätze einzuschränken\n\nDaten\nDaten[AGE>20,]\nDaten[SEX==\"w\",]\n\n  # gleiches Ergebnis:\nDaten[SEX!=\"m\",]\n\n  # Ergebnis in ein Objekt speichern\nsubDat <- Daten[AGE>20,]\n\n  # mehrere Bedingeungen können mit\n  # & verknüpft werden:\n\nDaten[AGE>18 & SEX==\"w\",]\n\n#------------------------------------------------------------#\n# Sequenzen\n#------------------------------------------------------------#\n\n\n# Sequenz von 1 bis 10\n1:10\n\nseq(-2,8,by=1.5)\n\na<-seq(3,12,length=12)\n\nb<- seq(to=5,length=12,by=0.2)\n\nd <-1:10\nd<- seq(1,10,1)\nd <- seq(length=10,from=1,by=1)\n\n# wiederhole 1 10 mal\nrep(1,10)\nrep(\"A\",10)\n\n\n#------------------------------------------------------------#\n# Der Befehl paste\n#------------------------------------------------------------#\n\n?paste\npaste(1:4)\npaste(\"A\", 1:6, sep = \"\")\n\n",
    "created" : 1426860741597.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4200458526",
    "id" : "EED6D31E",
    "lastKnownWriteTime" : 1400509815,
    "path" : "J:/Work/Statistik/Kolb/Workshops/2015/WorkshopEinfuehrungR/Rcode/IntroR_A_ErsteBefehle.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}