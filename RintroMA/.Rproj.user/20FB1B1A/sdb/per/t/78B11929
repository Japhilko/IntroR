{
    "contents" : "---\ntitle: \"Grundlagen\"\nauthor: \"Jan-Philipp Kolb\"\ndate: \"Friday, March 20, 2015\"\noutput: pdf_document\n---\n\nR ist eine Objekt-orientierte Sprache\n\n\n# Vektoren und Zuweisungen\n\n* R ist eine Objekt-orientierte Sprache\n\n```{r}\n# <- ist der Zuweisungsoperator\n\nb <- c(1,2)\n```\n\n* erzeugt ein Objekt mit den Zahlen 1 und 2\n* Eine Funktion kann auf dieses Objekt angewendet werden:\n\n```{r}\nmean(b)\n```\n\n\n*  berechnet den Mittelwert\n\nMit den folgenden Funktionen können wir etwas über die Eigenschaften des Objekts lernen:\n\n```{r}\nlength(b) # b hat die Länge 2\nstr(b) # b ist ein numerischer Vektor\n```\n\n\n\nFunktionen im base-Paket\n\n\nDiese Funktionen brauchen nur ein Argument.\n\n\n```{r}\n# Länge \nb <- c(1,2)\nlength(b)\n\n  # Das Maximum:\nmax(b)\n\n  # Minimum\nmin(b)\n\n  # Standardabweichung\nsd(b)\n\n  # Varianz\nvar(b)\n\n  # Mittelwert\nmean(b)\n\n  # Median\nmedian(b)\n\n  # Das Ergebnis kann wieder einem Objekt zugewiesen werden\nmed_b <- median(b)\n```\n\n\nFunktionen mit mehr Argumenten:\n\n```{r}\n\nd <- c(1,4,3,7,9,5,4,3)\n\n\n  # Quantil berechnen:\nquantile(d,0.9)\n\n\n  # hier werden 2 Elemente aus d gezogen\nsample(x=d,size=2,replace=FALSE)\n\n  # jedes Mal können andere Ergebnisse resultieren\n\n  # hier wird nur ein Element gezogen\nsample(x=d,size=1,replace=FALSE)\n\n  # auch dieses Ergebnis kann wieder in einem Element\n  # gespeichert werden\n\nstichA <- sample(x=d,size=1,replace=FALSE)\n\n```\n\nDas Argument replace gibt an, ob eine Stichprobe mit oder ohne zurücklegen gezogen wird\n\n\n\nEine einführende Übersicht findet man unter:\n\n<http://cran.r-project.org/doc/manuals/R-intro.html>\n\n# Verschiedene Datentypen\n\n```{r}\nA <- c(5,4,3)\nis.numeric(A)\nstr(A)\n\nB <- c(T,F,T,T)\nis.logical(B)\nstr(B)\n\nC <- c(\"AB\",\"F\",\"23\")\nis.logical(C)\nstr(C)\n\n  # immer das niedrigste \n  # Niveau wird genommen\n\nD <- c(1,3,\"A\")\nstr(D)\n\nb <- c(1,2)\nlog <- c(T,F)\nchar <- c(\"A\",\"b\")\n\n  # Faktoren sind eine spezielle Form,\n  # vor allem bei Regression hilfreich\n\nfac <- as.factor(c(1,2))\n\n  # mit as... kann man also umwandeln\n\nas.character(b)\n  # wenn man das nicht in Objekt speichert\n  # merkt es es sich R auch nicht\n\nb\n\n\nb <- c(1,2) # numeric\nlog <- c(T,F) # logical\nchar <-c(\"A\",\"b\") # character\nfac <- as.factor(c(1,2)) # factor\n```\n\n\n# Indizieren\n\n```{r}\n\n####\n# vector\n\nA1 <- c(1,2,3,4)\nA1\nA1[1]\nA1[4]\nA1[1:3]\nA1[-4]\n\n####\n# dataframe\n\n  # Beispieldaten generieren:\nAGE <- c(20,35,48,12)\nSEX <- c(\"m\",\"w\",\"w\",\"m\")\n\n  # Diese beiden Vektoren zu einem data.frame verbinden:\nDaten <- data.frame(Alter=AGE,Geschlecht=SEX)\n\n  # Anzahl der Zeilen/Spalten herausfinden\n\nnrow(Daten) # Zeilen\nncol(Daten) # Spalten\n\nAA <- 4:1\nA2 <- cbind(A1,AA)\nA2[1,1]\nA2[2,]\nA2[,1]\nA2[,1:2]\n```\n\n\n# Matrizen und Arrays\n\n\n* In Matrizen und Arrays stehen meist nur numerische Werte.\n* Dadurch wird beispielsweise Matrix Multiplikation möglich.\n* Anders als beim data.frame sind mehr als zwei Dimensionen möglich.\n\n\n```{r}\nA <- matrix(seq(1,100), nrow = 4)\ndim(A)\n\nA3 <- array(1:8,c(2,2,2))\nA3\nA3[,,2]\n```\n\n\n# Liste\n\n  \t\t* Eine Liste in R entspricht einem geschachtelten Array in anderen Programmiersprachen\n\t\t\t* Listen können alles enthalten\n\t\t\t* Listen können geschachtelt sein\n\t\t\t* Listen sollte man sehr bedacht verwenden\n\n\n```{r}\nA4 <- list(A1,1)\nA4\nA4[[2]]\n```\n\n# Sequenzen\n\n```{r}\n\n# Sequenz von 1 bis 10\n1:10\n\nseq(-2,8,by=1.5)\n\na<-seq(3,12,length=12)\n\nb<- seq(to=5,length=12,by=0.2)\n\nd <-1:10\nd<- seq(1,10,1)\nd <- seq(length=10,from=1,by=1)\n\n# wiederhole 1 10 mal\nrep(1,10)\nrep(\"A\",10)\n```\n\n# Die Funktion paste\n\n\n```{r}\n\n?paste\npaste(1:4)\npaste(\"A\", 1:6, sep = \"\")\n\n```\n\n",
    "created" : 1426861287894.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1198017463",
    "id" : "78B11929",
    "lastKnownWriteTime" : 1426861243,
    "path" : "~/GitHub/IntroR/Grundlagen.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}